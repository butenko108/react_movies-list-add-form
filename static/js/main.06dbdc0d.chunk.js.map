{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","label","value","onChange","required","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","submit","count","onSubmit","disabled","App","moviesFromServer","newMoviesList","setNewMoviesList","setCount","preventDefault","prevState","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06dbdc0d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  label?: string,\n  value: string,\n  onChange?: (newValue: string) => void,\n  required?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  label = name,\n  value,\n  onChange = () => {},\n  required = false,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { FormEvent } from 'react';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  setTitle: (title: string) => void;\n  setDescription: (description: string) => void;\n  setImgUrl: (imgUrl: string) => void;\n  setImdbUrl: (imdbUrl: string) => void;\n  setImdbId: (imdbId: string) => void;\n  hasError: boolean;\n  submit: (event: FormEvent) => void;\n  count: number;\n};\n\nexport const NewMovie: React.FC<Props> = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n  imdbId,\n  setTitle,\n  setDescription,\n  setImgUrl,\n  setImdbUrl,\n  setImdbId,\n  hasError,\n  submit,\n  count,\n}) => {\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={submit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={hasError}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport React, { FormEvent, useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [newMoviesList, setNewMoviesList] = useState(moviesFromServer);\n  const hasError = !(title && imgUrl && imdbUrl && imdbId);\n  const [count, setCount] = useState(0);\n\n  const submit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (hasError === false) {\n      setNewMoviesList(prevState => {\n        const newMovie = {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        };\n\n        return [...prevState, newMovie];\n      });\n\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n      setCount(prevState => prevState + 1);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={newMoviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          title={title}\n          description={description}\n          imgUrl={imgUrl}\n          imdbUrl={imdbUrl}\n          imdbId={imdbId}\n          setTitle={setTitle}\n          setDescription={setDescription}\n          setImgUrl={setImgUrl}\n          setImdbUrl={setImdbUrl}\n          setImdbId={setImdbId}\n          hasError={hasError}\n          submit={submit}\n          count={count}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}